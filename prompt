#!/bin/bash

# https://github.com/necolas/dotfiles

prompt_git() {
    local s=""
    local branchName=""

    # check if the current directory is in a git repository
    if [ $(git rev-parse --is-inside-work-tree &>/dev/null; printf "%s" $?) == 0 ]; then

        # check if the current directory is in .git before running git checks
        if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == "false" ]; then

            # ensure index is up to date
            git update-index --really-refresh  -q &>/dev/null

            # check for uncommitted changes in the index
            if ! $(git diff --quiet --ignore-submodules --cached); then
                s="$s 🚧";
            fi

            # check for unstaged changes
            if ! $(git diff-files --quiet --ignore-submodules --); then
                s="$s 💎";
            fi

            # check for untracked files
            if [ -n "$(git ls-files --others --exclude-standard)" ]; then
                s="$s ❓";
            fi

            # check for stashed files
            # if $(git rev-parse --verify refs/stash &>/dev/null); then
            #     s="$s 💰";
            # fi

        fi

        # get the short symbolic ref
        # if HEAD isn't a symbolic ref, get the short SHA
        # otherwise, just give up
        branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
                      git rev-parse --short HEAD 2> /dev/null || \
                      printf "(unknown)")"

        printf "%s" " ᚠ $1$branchName$s"
    else
        return
    fi
}

# Show abbreviated pwd for longer paths
# https://stackoverflow.com/questions/5687446/bash-custom-ps1-with-nice-working-directory-path#answer-33572866
function generate_pwd {
  pwd | sed s.$HOME.~.g | awk -F"/" '
  BEGIN { ORS="/" }
  END {
  for (i=1; i<= NF; i++) {
      if ((i == 1 && $1 != "") || i == NF-1 || i == NF) {
        print $i
      }
      else if (i == 1 && $1 == "") {
        print "/"$2
        i++
      }
      else {
        print ".."
      }
    }
  }'
}

set_prompts() {
    PS1="ᛝ \$(generate_pwd)\[\e[0;37m\]\$(prompt_git)\[\e[0m\]\n"
    export PS1
}

set_prompts
unset set_prompts
